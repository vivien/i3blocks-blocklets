#! /bin/sh

#rofioptions="-no-fullscreen -markup-rows -font \'Monospace 6\' -bw 2 -m -3 -no-custom -hide-scrollbar -dmenu -eh 1 "







select_display(){
    connected_monitors[i]=$(xrandr | awk '($2 == "connected" ) {print $1} ')
    num_monitors=${#connected_monitors[@]}

    if [  num_monitors == 1  ]  
    then
        selected_monitor=connected_monitors[0] 
        command="xrandr --output ${selected_monitor} "
        select_action
    else
        selected_monitor=$( echo ${connected_monitors} | rofi -no-fullscreen -dmenu -p "select a display to configure"  ) 
        command="xrandr --output ${selected_monitor} "

    select_action
    fi
}

select_action(){
    
    actions="resolution;placement;set active;set primary;c<F7>lone;rotate;mirror;back;exit"
    selected_action=$(echo ${actions} | rofi -p "select action" -sep ";" -dmenu -no-fullscreen)
    case "$selected_action" in
        "rotate") select_rotation
            ;;
        "resolution") select_resolution
            ;;
        "placement") select_placement
            ;;
        "set active") $(${command} --auto)
            ;;
        "set primary") $(${command} --primary)
            ;;
        "clone") set_clone
            ;;
        "mirror") select_axis
            ;;
        "back") select_display
            ;;
        "exit") exit 0 
            ;;
        *) select_action
            ;;
    esac
}

select_rotation(){
    possible_orientation="normal;right;left;inverted;back;exit"
    selected_orientation=$(echo ${possible_orientation} | rofi -sep ";" -dmenu -no-fullscreen )
    case "$selected_orientation" in 
        normal|right|left|inverted) ;;
        'back') select_action ;;
        "exit"|"") exit 0 ;;
        *) select_rotation
    esac
    $(${command} --rotate "${selected_orientation}")
}


select_axis(){
    possible_axes="Invert X axis;Invert Y axis;Invert X and Y axis;normal;back;exit"
    selected_axis=$(echo ${possible_axes} | rofi -dmenu -no-fullscreen -sep ";" $rofioptions)
    sel="normal"
    case "selected_axis" in
        "Invert X axis") sel="x" ;;
        "Invert Y axis") sel="y" ;;
        "Invert X and Y axis") sel="xy" ;; 
        "normal") ;;
        "back") select_action ;;
        "exit"|"") exit 0 ;;
        
        #*) select_axis ;;
    esac
    $($command) --reflect "${sel}"  
  
}

set_active(){
echo "actie set"
}

set_primary(){
echo primary_set
}

set_clone(){
echo cloned
}

select_placement(){
echo whereto
}




case "$BLOCK_BUTTON" in
    1|2|3) select_display ;;
esac


echo -e "\uf108"

